********************************************************************************
** 	TITLE: 		anonymize.do
**
**	PURPOSE: 	This do file anonymizes datasets based on users instruction
**
**	NOTES:		This scrpit was automatically generated by IPA's PII detector app. For details, check https://github.com/PovertyAction/PII_detection
**	
**	AUTHOR:
**
**	CREATED: 	[date]
********************************************************************************
*Table of Contents:
*1. Set Directories
*2. Strip PII
*3. Anonymize IDs


clear all
cap log close

version 14.2
set more off
set varabbrev off



***************************************
* 1. Set directories
***************************************
*A. Set locations
*B. Set up varlists for modification
*C. Use file


**A. Set locations
	local infile 	"[input_file_path]"
	local outfile 	"[output_file_path]"


**B. Set varlists for modification
	loc dropvars 	[list_variables_to_drop_space_delimited]
	loc valvars 	[list_variables_to_remove_value_labelling_space_delimited]
	loc hashvars 	[list_variables_to_hash_space_delimited]


**C. Use files
	use "`infile'", clear



***************************************
* 2. Strip PII
***************************************
*A. Drops the variables
*B. Removes value labeling
*C. Converts to an encoded value and drops the value labeling
*D. Hash an ID

/*
	This section remove information, either variables or labels, to anonymize
	the data based on selections in the PII detector .exe.

	It does so in three ways:

		A. Removes explicit PII variables
		B. Removes labels of encoded variables that contain PII
		C. Encodes string values and drops the label
		D. Hash ID values to ensure public data cannot merge on to internal
		   data easily.

	Before you produce the fully anonymized dataset ensure that you confirm PII
	is removed by looking at remaining string variables and checking the full
	 variable list as well as checking notes are empty:

		ds, v(32)
		ds, has(type stirng) v(32)
		notes
*/


**A. Drop variables
	drop `droplist'


**B. Remove value labeling
	foreach var of local valvars {

		* Get value label name
		loc vallab : value label `var'

		*Remove labeling
		if "`vallab'" != "" {

			*Remove value label from variable
			label values `var' 													// Stata requires value labels to be stripped before dropping
			label drop `vallab' 												// Remove value labels from memory
		}
		// end if "`vallab'" existis

	}
	// end foreach var of local valvars

**C.

**D. Hash an ID
	/*
		We hash the ID using the following [hash function]
		with the following properties

		[check]
	*/
	foreach var of local hashvars {

		*Save label
		loc varlab : variable label `var'

		*Create tempvar
		tempvar `var'
		gen ``var'' = [hash function `var']

		*Replace variable with hashed output
		drop `var'
		gen `var' = ``var''
		label var `var' "`varlab'"
	}
	// end foreach var of local hashvars



***************************************
* 3. Save file
***************************************
	*Save file
	save `outfile', replace



**EOF**
